context ToDoList is {

  command AddItem is { content: ReactiveSummit.ToDoContent }
  event ItemAdded is { content: ReactiveSummit.ToDoContent }
  event ItemRejected is { id: Id(ToDoItem), message: String }
  command CompleteItem is {id: Id(ToDoItem) }
  event ItemCompleted  is {id: Id(ToDoItem) }

  entity ToDoItem is {
    record ActiveState is {
      content: ReactiveSummit.ToDoContent
      createdAt: TimeStamp
    }
    state Active is record ActiveState
    handler is {
      on command ToDoList.AddItem {
        example add_item is {
          when "id of content does not exist"
          then "create new ToDoItem from content"
          else ""
      }
    }

    record CompletedState is {
      content: ReactiveSummit.ToDoContent
      createdAt: TimeStamp
      completedAt: TimeStamp
    }
    state Completed is record CompletedState
  }

  projection ToDoItems is {
    ???
  }
}
